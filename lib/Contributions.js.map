{"version":3,"sources":["../src/containers/Contributions.js"],"names":["Contributions","props","state","loading","successfull","error","lookup","stats","Map","currentPage","lastPage","_getCommits","bind","setState","get","then","response","data","headers","link","nextPage","split","length","contributions","filter","entry","oneDay","currentDate","Date","oldDate","setMonth","getMonth","itr","twix","iterate","hasNext","tempDate","next","toDate","tempKey","getFullYear","getDate","set","map","contribution","date","created_at","key","has","count","catch","Component"],"mappings":"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","file":"Contributions.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport twix from 'twix'\nimport LineChart from './ContributionsChart'\n\n/**\n * @class Contributions\n *\n * This is the data layer component for the package Contributions. The aim of this\n * component is to load the required data based on the properties given to the\n * component. This data is then manipulated and passed to the ContributionsChart.\n *\n * @since v0.3.0-1\n * @author Jóhan Davidsen <johan.davidsen@fjakkarin.com>\n *\n */\nclass Contributions extends React.Component {\n\n  /**\n   * @constructor\n   *\n   * The constructor initializes the local state with the default properties.\n   */\n  constructor (props) {\n    super(props)\n    this.state = {\n      loading: false,\n      successfull: false,\n      error: false,\n      lookup: true,\n      stats: new Map(),\n      currentPage: 1,\n      lastPage: 11\n    }\n\n    this._getCommits = this._getCommits.bind(this)\n  }\n\n  /**\n   * @method componentDidMount\n   *\n   * This method dose all the heavy lifting, as it calls the github API and\n   * transforms the data to a data structure that can be used to build a graph.\n   *\n   */\n  componentDidMount () {\n    this._getCommits()\n  }\n\n  /**\n   * @method _getCommits\n   *\n   * This method is a recursive method, which calls upon it self until all the\n   * events have been traversed.\n   *\n   */\n  _getCommits () {\n    const { currentPage, lastPage, lookup, stats } = this.state\n    // Need to fix time line\n    if (currentPage <= lastPage && lookup) {\n      this.setState({ loading: true })\n      axios.get('https://api.github.com/users/johandavidsen/events?per_page=300&page=' + currentPage )\n        .then((response) => {\n          const { data, headers } = response\n          const { link } = headers\n          // Get links\n          if (link) {\n            let nextPage = link.split(',')[0].split(';')[0][link.split(',')[0].split(';')[0].length - 2]\n          }\n          // Filter data by type === 'PushEvent'\n          // const contributions = data.filter((entry) => { if (entry.type ==='PushEvent') { return entry } })\n          const contributions = data.filter((entry) => { return entry })\n          // Initialize the resultant data structure\n          // let results = new Map()\n          // //\n          var oneDay = 24*60*60*1000;\n          // // Get currentDate\n          const currentDate = new Date()\n          // // Set 3 months back\n          let oldDate = new Date()\n          oldDate.setMonth(oldDate.getMonth() - 3)\n          // // Populate the results\n          var itr = moment.twix(oldDate, currentDate).iterate('days')\n\n          while(itr.hasNext()){\n            let tempDate = itr.next().toDate()\n            let tempKey = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate()\n            stats.set(tempKey, 0)\n          }\n\n          contributions.map((contribution) => {\n            // Build date object\n            let date = new Date(contribution.created_at)\n            // // Build the key\n            let key = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\n            if (stats.has(key)) {\n              // If the key exists add a new entry.\n              // First get the current value\n              let count = stats.get(key)\n              // Set the new value\n              stats.set(key, count + 1)\n            } else {\n              // If the key dosen't exist at key and new entry.\n              stats.set(key, 1)\n            }\n          })\n\n          if ( currentPage === lastPage) {\n            this.setState({ loading: false, successfull: true, lookup: false, stats: stats })\n            this._getCommits()\n          } else {\n            let lastPage = link.split(',')[1].split(';')[0][link.split(',')[1].split(';')[0].length - 2]\n            this.setState({ currentPage: nextPage, lastPage: lastPage, stats: stats })\n            this._getCommits()\n          }\n          })\n        .catch((response) => {\n          this.setState({ loading: false, error: true})\n        })\n    } else { }\n  }\n\n  /**\n   * @method render\n   *\n   * The render method returns a JSX structure, that React will use to render\n   * this component.\n   *\n   */\n  render () {\n    const { loading, successfull, error, stats } = this.state\n    return (\n      <div>\n        <LineChart\n          data={stats}\n          />\n      </div>\n    )\n  }\n}\n\n/**\n * @exports Contributions\n *\n * The default export is the Contributions class, written by Jóhan Davidsen\n * <johan.davidsen@fjakkarin.com>\n *\n */\nexport default Contributions\n"]}